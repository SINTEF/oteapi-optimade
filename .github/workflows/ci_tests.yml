name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'push-action/**'  # Allow pushing to protected branches (using CasperWA/push-protected)

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    # timeout-minutes: 2

    steps:
    - name: Checkout oteapi-optimade
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel flit
        pip install .[pre-commit]

    - name: Test with pre-commit
      run: SKIP=pylint,pylint-tests pre-commit run --all-files

  pylint-safety:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout oteapi-optimade
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel flit
        pip install -e .[dev]
        pip install safety

    - name: Run pylint
      run: pylint --rcfile=pyproject.toml --ignore-paths=tests/ --extension-pkg-whitelist='pydantic' -- *.py oteapi_optimade

    - name: Run pylint - tests
      run: pylint --rcfile=pyproject.toml --extension-pkg-whitelist='pydantic' --disable=C0415,W0621 -- tests

    # Ignore ID 44715 for now.
    # See this NumPy issue for more information: https://github.com/numpy/numpy/issues/19038
    # NumPy is a sub-dependency of `oteapi-core`
    - name: Run safety
      run: pip freeze | safety check --stdin --ignore 44715

  pytest:
    name: pytest ${{ matrix.os[1] }}-py${{ matrix.python-version }}
    runs-on: ${{ matrix.os[0] }}
    # timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        os:
        - ["ubuntu-latest", "linux"]
        - ["windows-latest", "windows"]

    steps:
    - name: Checkout oteapi-optimade
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel flit
        pip install -e .[test]

    - name: Test with pytest
      run: pytest -vvv --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9' && github.repository == 'SINTEF/oteapi-optimade'
      uses: codecov/codecov-action@v2
      with:
        files: coverage.xml
        flags: ${{ matrix.os[1] }}

  build-package:
    name: Build distribution package
    runs-on: ubuntu-latest
    # timeout-minutes: 5

    steps:
    - name: Checkout oteapi-optimade
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel flit

    - name: Check building distribution
      run: flit build

  docs:
    name: Documentation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout oteapi-optimade
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel flit
        pip install -e .[doc]

    - name: Build
      run: |
        invoke create-api-reference-docs --pre-clean
        invoke create-docs-index
        mkdocs build --strict
