name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'push-action/**'  # Allow pushing to protected branches (using CasperWA/push-protected)

jobs:
  basic-tests:
    name: External
    uses: SINTEF/ci-cd/.github/workflows/ci_tests.yml@v2.7.3
    with:
      # General setup
      install_extras: "[dev]"

      # pre-commit
      python_version_pre-commit: "3.9"

      # pylint & safety
      python_version_pylint_safety: "3.9"
      run_pylint: false
      run_safety: true

      # Build dist
      python_version_package: "3.9"
      build_libs: flit
      build_cmd: flit build

      # Build documentation
      python_version_docs: "3.9"
      package_dirs: oteapi_optimade
      full_docs_dirs: "models"

  pytest:
    name: pytest (${{ matrix.os[1] }}-py${{ matrix.python-version }})
    runs-on: ${{ matrix.os[0] }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        os:
        - ["ubuntu-latest", "linux"]
        - ["windows-latest", "windows"]

    steps:
    - name: Checkout oteapi-optimade
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel flit
        pip install -e .[test]

    - name: Test with pytest
      run: pytest -vvv --cov-report=xml

    - name: Upload coverage to Codecov
      if: github.repository == 'SINTEF/oteapi-optimade'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        env_vars: OS,PYTHON
        flags: local
      env:
        OS: ${{ matrix.os[0] }}
        PYTHON: ${{ matrix.python-version }}

  pytest-real-backend:
    runs-on: ubuntu-latest
    name: pytest-real backend

    env:
      OTEAPI_PORT: 8080
      OPTIMADE_PORT: 5000
      OTEAPI_prefix: "/api/v1"

    services:
      redis:
        image: redis:latest
        volumes:
          - redis-persist:/data
        ports:
          - "6379:6379"
      optimade:
        image: ghcr.io/materials-consortia/optimade:develop
        ports:
          - "5000:5000"  # the first value should equal `OPTIMADE_PORT`
        env:
          OPTIMADE_BASE_URL: "http://localhost:5000"  # port value should equal `OPTIMADE_PORT`

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"

    - name: Install python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel flit
        pip install -e .[dev]

    - name: Run OTEAPI Service
      run: |
        docker pull ghcr.io/emmc-asbl/oteapi:${DOCKER_OTEAPI_VERSION}
        docker run \
          --env "OTEAPI_REDIS_TYPE=redis" \
          --env "OTEAPI_REDIS_HOST=localhost" \
          --env "OTEAPI_REDIS_PORT=6379" \
          --env "OTEAPI_prefix=${OTEAPI_prefix}" \
          --network "host" \
          --volume "${PWD}:/oteapi-optimade" \
          --entrypoint "" \
          ghcr.io/emmc-asbl/oteapi:${DOCKER_OTEAPI_VERSION} \
          /bin/bash -c "pip install -v -e /oteapi-optimade && ./entrypoint.sh" &

        .github/utils/wait_for_it.sh localhost:${OTEAPI_PORT} -t 240
        sleep 5
      env:
        # Pin to 1.20231108.329 until #163 has been closed.
        # Related issue: https://github.com/SINTEF/oteapi-optimade/issues/187
        DOCKER_OTEAPI_VERSION: '1.20231108.329'

    - name: Run end-2-end tests
      run: python .github/utils/end2end_test.py
