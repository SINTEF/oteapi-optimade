name: CD - Check dependencies

on:
  schedule:
    # At 7:30 every Monday (5:30 UTC)
    - cron: "30 5 * * 1"
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update dependencies
    if: github.repository_owner == 'SINTEF'
    runs-on: ubuntu-latest
    env:
      DEPENDABOT_BRANCH: ci/dependency-updates
      GIT_USER_NAME: "TEAM 4.0[bot]"
      GIT_USER_EMAIL: "Team4.0@SINTEF.no"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ env.DEPENDABOT_BRANCH }}
        fetch-depth: 0

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Set up git user info
      run: |
        git config --global user.name "${{ env.GIT_USER_NAME }}"
        git config --global user.email "${{ env.GIT_USER_EMAIL }}"

    - name: Install necessary dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel flit
        pip install .[dev]

    - name: Run invoke task
      run: |
        invoke update-deps

        if [ -n "$(git status --porcelain pyproject.toml)" ]; then
          echo "UPDATE_DEPS=true" >> $GITHUB_ENV
          git add pyproject.toml
          git commit -m "Update dependencies"
        else
          echo "UPDATE_DEPS=false" >> $GITHUB_ENV

    - name: Fetch PR body
      if: env.UPDATE_DEPS == 'true'
      id: pr_body
      uses: chuhlomin/render-template@v1.5
      with:
        template: .github/utils/pyproject_toml_update_pr_body.txt

    - name: Create PR
      if: env.UPDATE_DEPS == 'true'
      id: cpr
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.RELEASE_PAT }}
        commit-message: Update dependencies
        committer: "${{ env.GIT_USER_NAME }} <${{ env.GIT_USER_EMAIL }}>"
        author: "${{ env.GIT_USER_NAME }} <${{ env.GIT_USER_EMAIL }}>"
        branch: ci/update-pyproject
        delete-branch: true
        title: "[Auto-generated] Update dependencies (`pyproject.toml`)"
        body: ${{ steps.pr_body.outputs.result }}
        labels: CI/CD

    - name: Information
      run: 'echo "${{ steps.cpr.outputs.pull-request-operation }} PR #${{ steps.cpr.outputs.pull-request-number }}: ${{ steps.cpr.outputs.pull-request-url }}"'
